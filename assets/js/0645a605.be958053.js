"use strict";(self.webpackChunkjd_scratchified_docs=self.webpackChunkjd_scratchified_docs||[]).push([[32],{9839:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=n(4848),i=n(8453);const s={sidebar_position:10},o="7 - Adding Lyrics",a={id:"addinglyrics",title:"7 - Adding Lyrics",description:'Now, we\'ll add on-screen lyrics to your routine. They will appear during "real" gameplay (i.e. not test runs) as long as Low-Resource Mode is turned off.',source:"@site/docs/7_addinglyrics.md",sourceDirName:".",slug:"/addinglyrics",permalink:"/JDScratchifiedDocs/docs/addinglyrics",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"6 - Adding Pictograms",permalink:"/JDScratchifiedDocs/docs/addingpictograms"},next:{title:"8 - Adding Judge Timings",permalink:"/JDScratchifiedDocs/docs/addingscoretimings"}},l={},c=[{value:"Writing the Lyrics",id:"writing-the-lyrics",level:2},{value:"Setting the Timings",id:"setting-the-timings",level:2},{value:"Charting",id:"charting",level:3},{value:"Converting",id:"converting",level:3}];function h(e){const t={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"7---adding-lyrics",children:"7 - Adding Lyrics"}),"\n",(0,r.jsxs)(t.p,{children:['Now, we\'ll add on-screen lyrics to your routine. They will appear during "real" gameplay (i.e. not test runs) as long as Low-Resource Mode is turned ',(0,r.jsx)(t.strong,{children:"off"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"The lyrics are purely visual. If your song doesn't have any vocals, or you don't want to put in the extra work to add them to your routine, you can skip this page."}),"\n",(0,r.jsxs)(t.admonition,{title:"Caution",type:"warning",children:[(0,r.jsx)(t.p,{children:"JDS lyrics currently only support English alphanumerals and the following special characters: . , ! ? - ' \""}),(0,r.jsx)(t.p,{children:"Support for custom lyric characters will be added in a future version."})]}),"\n",(0,r.jsx)(t.h2,{id:"writing-the-lyrics",children:"Writing the Lyrics"}),"\n",(0,r.jsx)(t.p,{children:"Do this in Notepad or another text editing software. We will import it into a list in the project once you're done."}),"\n",(0,r.jsx)(t.p,{children:"Each line of the lyrics should be no more than a few words. Avoid going over 40 characters per line."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Example of the above",src:n(3777).A+"",width:"1750",height:"250"})}),"\n",(0,r.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,r.jsx)(t.p,{children:"This per-line limit is suggested for two reasons: to avoid overflowing into the pictograms area, and to make sure the game has enough time to load each line (it can generate up to 30 characters per second, excluding spaces)."})}),"\n",(0,r.jsxs)(t.p,{children:["You may have noticed the use of underscores in the image example above. When writing lyrics, you use underscores to separate ",(0,r.jsx)(t.strong,{children:"syllables that will be highlighted separately"}),". The underscores will not be rendered in-game; they just tell the lyric generator what to do when highlighting words."]}),"\n",(0,r.jsx)(t.p,{children:'Also, use an asterisk "*" in place of any censored words. It will appear as "..." in-game.'}),"\n",(0,r.jsx)(t.h2,{id:"setting-the-timings",children:"Setting the Timings"}),"\n",(0,r.jsx)(t.p,{children:"This is where we (finally) boot up ArrowVortex, which you should have downloaded in part 1 if you were planning to add lyrics to your routine."}),"\n",(0,r.jsx)(t.admonition,{title:"Disclaimer",type:"info",children:(0,r.jsx)(t.p,{children:"Neither Just Dance Scratchified nor its developer have any official affiliation with ArrowVortex. This tool was not specifically designed for JDS, but we are using it because it incidentally allows this process to be much more simple and efficient."})}),"\n",(0,r.jsx)(t.p,{children:"When you boot up ArrowVortex, you'll be greeted by a blank screen with their logo. Press Ctrl+O (or select File > Open from the menu bar at the top). Then, choose the MP3 that you've been using in-game."}),"\n",(0,r.jsx)(t.p,{children:"Next, press Shift+N (or select Chart > New chart...). Set the chart type to Dance Double. The other properties don't matter. Press the confirm buttom and create the chart."}),"\n",(0,r.jsx)(t.p,{children:'Bring up the sync menu with Shift + S (or Tempo > Adjust sync). Enter the tempo into the "Initial BPM" and click Apply BPM.'}),"\n",(0,r.jsx)(t.h3,{id:"charting",children:"Charting"}),"\n",(0,r.jsx)(t.p,{children:"ArrowVortex is a rhythm game charting software. Since we selected Dance Double as our chart type, you should see 8 arrows at the top of the screen. Before we get into how we'll be using these, let's go over the basic controls:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Press the up and down arrows to scroll up and down.","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Press left and right to change the snap range."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"Press the spacebar to play and pause."}),"\n",(0,r.jsx)(t.li,{children:"Press + or - on your numberpad to zoom. (You can also use View > Zoom > Zoom in/out.)"}),"\n",(0,r.jsxs)(t.li,{children:["Press any number key 1 through 8 to place an arrow in that column. We will only be using columns 1 through 6.","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"You can delete an arrow by pressing the same key again in the same spot."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:'Go ahead and set your snap range to "8th" (so the diamonds next to the arrows are blue). For JDS, we will never need to use a snap more precise than this.'}),"\n",(0,r.jsxs)(t.p,{children:["Each arrow that you place on the chart will correspond to a certain ",(0,r.jsx)(t.strong,{children:"event"})," in your routine's lyrics. Here are the events attributed to each column:"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Column"}),(0,r.jsx)(t.th,{children:"Function"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"1"}),(0,r.jsxs)(t.td,{children:["Each arrow will ",(0,r.jsx)(t.strong,{children:"highlight"})," one word (or syllable) in the lyrics. Words are always highlighted in order, and the game ",(0,r.jsx)(t.em,{children:"will not"})," automatically catch up if a line disappears before it is fully highlighted."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"2"}),(0,r.jsx)(t.td,{children:"Same as 1. Use if you need to highlight 2 words within the same half-beat."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"3"}),(0,r.jsxs)(t.td,{children:["Each arrow will cause the a lyric line to ",(0,r.jsx)(t.strong,{children:"appear"}),". They always appear in order. Remember that they need enough time to load."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"4"}),(0,r.jsxs)(t.td,{children:["Each arrow will cause the current lyric line to ",(0,r.jsx)(t.strong,{children:"disappear"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"5"}),(0,r.jsxs)(t.td,{children:["Each arrow will cause a backing lyric line to ",(0,r.jsx)(t.strong,{children:"appear"}),'. This is an advanced feature. You can enter backing lines in the Costumes tab of the game\'s "Backing Lyrics" sprite, and you can set the order via the "backingOrder" variable setter near the top of the coach sprite\'s main script.']})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"6"}),(0,r.jsxs)(t.td,{children:["Each arrow will cause the current backing lyric line to ",(0,r.jsx)(t.strong,{children:"disappear"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"7"}),(0,r.jsx)(t.td,{children:"Unused."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"8"}),(0,r.jsx)(t.td,{children:"Unused."})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"converting",children:"Converting"}),"\n",(0,r.jsxs)(t.p,{children:["Once your \"chart\" is finished, we'll run it through a Scratch project that converts it to a format readable by JDS. The project is pretty small and we only need to use it once, so it's easiest to just open it in a browser. ",(0,r.jsx)(t.a,{href:"https://turbowarp.org/1028139109/editor",children:"Here you go!"})]}),"\n",(0,r.jsx)(t.p,{children:'Right-click on the "ArrowVortex Data" list and import your ArrowVortex .sm file. Next, import your written lyrics into the "Lyrics" list. Then, run the "Convert ArrowVortex to JDS Lyrics" custom block, and export the Output list to your computer.'}),"\n",(0,r.jsxs)(t.p,{children:['Finally, go back to your custom song project, and scroll up to the top of the Lists section. You should see six lists that all start with "_Codename". These are the ',(0,r.jsx)(t.strong,{children:"song-specific data lists"}),". To keep things organized, you can go ahead and replace \"Codename\" in these list names with your song's codename (don't delete the underscore at the beginning). If your song has fewer than 4 coaches, you can also delete any Judge Data lists that you don't need."]}),"\n",(0,r.jsx)(t.p,{children:'Import the Output file that you just got into the "Lyric Data" list. Lyrics should now be working properly in-game.'})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},3777:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/lyricsexample-a09cd649b576543ecc88d092e3e2df60.png"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(6540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);